{"ast":null,"code":"var _jsxFileName = \"/Users/kavinrajasekaran/Documents/UCMerced/CurrentClasses/CSE108/iNeedToGoRightNow/src/components/MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, Marker, InfoWindow, useLoadScript } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapView({\n  setRestaurants,\n  setPosition\n}) {\n  _s();\n  const [position, setLocalPosition] = useState(null);\n  const [restaurants, setLocalRestaurants] = useState([]);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const codes = JSON.parse(localStorage.getItem('codes')) || {};\n\n  // Google Maps libraries to load\n  const libraries = ['places'];\n  const mapContainerStyle = {\n    height: '100vh',\n    width: '100%'\n  };\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyDO0kA88KZUIAuPBlgSV76v1OG2FlFmLYg',\n    // Replace with your API key\n    libraries\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(pos => {\n      const coords = {\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude\n      };\n      setLocalPosition(coords);\n      setPosition(coords);\n    });\n  }, [setPosition]);\n  useEffect(() => {\n    if (position) {\n      const service = new window.google.maps.places.PlacesService(document.createElement('div'));\n      const request = {\n        location: position,\n        radius: 1000,\n        type: ['restaurant']\n      };\n      service.nearbySearch(request, (results, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          const restaurantData = results.map(place => ({\n            id: place.place_id,\n            name: place.name,\n            position: place.geometry.location\n          }));\n          setLocalRestaurants(restaurantData);\n          setRestaurants(restaurantData);\n        }\n      });\n    }\n  }, [position, setRestaurants]);\n  const handleMarkerClick = restaurant => {\n    setSelectedRestaurant(restaurant);\n  };\n  if (loadError) return 'Error loading maps';\n  if (!isLoaded) return 'Loading Maps';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    children: position && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 15,\n      center: position,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(Marker, {\n        position: restaurant.position,\n        onClick: () => handleMarkerClick(restaurant)\n      }, restaurant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)), selectedRestaurant && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: selectedRestaurant.position,\n        onCloseClick: () => setSelectedRestaurant(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedRestaurant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), codes[selectedRestaurant.id] ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Restroom Code: \", codes[selectedRestaurant.id]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No code available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const code = prompt('Enter restroom code:');\n              if (code) {\n                codes[selectedRestaurant.id] = code;\n                localStorage.setItem('codes', JSON.stringify(codes));\n                setSelectedRestaurant(null);\n              }\n            },\n            children: \"Add/Edit Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(MapView, \"TExze12C7lRqxyXWLT0Xahw7II4=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GoogleMap","Marker","InfoWindow","useLoadScript","axios","jsxDEV","_jsxDEV","MapView","setRestaurants","setPosition","_s","position","setLocalPosition","restaurants","setLocalRestaurants","selectedRestaurant","setSelectedRestaurant","codes","JSON","parse","localStorage","getItem","libraries","mapContainerStyle","height","width","isLoaded","loadError","googleMapsApiKey","navigator","geolocation","getCurrentPosition","pos","coords","lat","latitude","lng","longitude","service","window","google","maps","places","PlacesService","document","createElement","request","location","radius","type","nearbySearch","results","status","PlacesServiceStatus","OK","restaurantData","map","place","id","place_id","name","geometry","handleMarkerClick","restaurant","children","zoom","center","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onCloseClick","code","prompt","setItem","stringify","_c","$RefreshReg$"],"sources":["/Users/kavinrajasekaran/Documents/UCMerced/CurrentClasses/CSE108/iNeedToGoRightNow/src/components/MapView.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, Marker, InfoWindow, useLoadScript } from '@react-google-maps/api';\nimport axios from 'axios';\n\nfunction MapView({ setRestaurants, setPosition }) {\n  const [position, setLocalPosition] = useState(null);\n  const [restaurants, setLocalRestaurants] = useState([]);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const codes = JSON.parse(localStorage.getItem('codes')) || {};\n\n  // Google Maps libraries to load\n  const libraries = ['places'];\n  const mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n  };\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyDO0kA88KZUIAuPBlgSV76v1OG2FlFmLYg', // Replace with your API key\n    libraries,\n  });\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((pos) => {\n      const coords = { lat: pos.coords.latitude, lng: pos.coords.longitude };\n      setLocalPosition(coords);\n      setPosition(coords);\n    });\n  }, [setPosition]);\n\n  useEffect(() => {\n    if (position) {\n      const service = new window.google.maps.places.PlacesService(document.createElement('div'));\n      const request = {\n        location: position,\n        radius: 1000,\n        type: ['restaurant'],\n      };\n\n      service.nearbySearch(request, (results, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          const restaurantData = results.map((place) => ({\n            id: place.place_id,\n            name: place.name,\n            position: place.geometry.location,\n          }));\n          setLocalRestaurants(restaurantData);\n          setRestaurants(restaurantData);\n        }\n      });\n    }\n  }, [position, setRestaurants]);\n\n  const handleMarkerClick = (restaurant) => {\n    setSelectedRestaurant(restaurant);\n  };\n\n  if (loadError) return 'Error loading maps';\n  if (!isLoaded) return 'Loading Maps';\n\n  return (\n    <div id=\"map\">\n      {position && (\n        <GoogleMap mapContainerStyle={mapContainerStyle} zoom={15} center={position}>\n          <Marker position={position} />\n\n          {restaurants.map((restaurant) => (\n            <Marker\n              key={restaurant.id}\n              position={restaurant.position}\n              onClick={() => handleMarkerClick(restaurant)}\n            />\n          ))}\n\n          {selectedRestaurant && (\n            <InfoWindow\n              position={selectedRestaurant.position}\n              onCloseClick={() => setSelectedRestaurant(null)}\n            >\n              <div>\n                <h3>{selectedRestaurant.name}</h3>\n                {codes[selectedRestaurant.id] ? (\n                  <p>Restroom Code: {codes[selectedRestaurant.id]}</p>\n                ) : (\n                  <p>No code available</p>\n                )}\n                <button\n                  onClick={() => {\n                    const code = prompt('Enter restroom code:');\n                    if (code) {\n                      codes[selectedRestaurant.id] = code;\n                      localStorage.setItem('codes', JSON.stringify(codes));\n                      setSelectedRestaurant(null);\n                    }\n                  }}\n                >\n                  Add/Edit Code\n                </button>\n              </div>\n            </InfoWindow>\n          )}\n        </GoogleMap>\n      )}\n    </div>\n  );\n}\n\nexport default MapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}